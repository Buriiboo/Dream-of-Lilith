name: C# Game CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - feature/**  # Runs on feature branches too

jobs:
  build:
    name: 🔧 Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  # Adjust this if needed

      - name: 📦 Restore dependencies
        run: dotnet restore

      - name: 🎨 Run dotnet-format (Code Formatting)
        run: |
          dotnet tool install -g dotnet-format
          dotnet format --verify-no-changes
          
      - name: 🔍 Run StyleCop Analysis
        run: |
          dotnet build /warnaserror /p:TreatWarningsAsErrors=true  # Ensures clean code
          
      - name: 🔎 Run Unit Tests
        run: dotnet test --logger trx --results-directory TestResults/

      - name: 🚀 Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: TestResults/
      
  sonarcloud:
    name: 🔎 SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build  # Only runs if the build succeeds

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: 🛡 Run SonarCloud Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"YourGitHubUsername_YourProjectName" /o:"YourSonarCloudOrg" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.token="$SONAR_TOKEN"
          dotnet build
          dotnet sonarscanner end /d:sonar.token="$SONAR_TOKEN"
